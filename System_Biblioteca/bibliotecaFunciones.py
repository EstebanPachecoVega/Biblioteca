#Esteban Elias Pacheco Vega

"""
Crea un programa en Python que gestione una 
lista de libros en una biblioteca
"""
from datetime import datetime
from tabulate import tabulate
import os
import msvcrt
import time
import csv

#Colecciones para almacenar libros
LIBROS = []

def limpiar():
    print('<<Press any key to continue>>')
    msvcrt.getch()
    os.system('cls')

def espera():
    time.sleep(1) #A√±ade un retraso de 1 segundo

def printR(texto):  #Color Rojo
    print(f'\033[31m{texto}\033[0m')

def printA(texto):  #Color Verde
    print(f'\033[32m{texto}\033[0m')

def printV(texto):  #Color Amarillo
    print(f'\033[33m{texto}\033[0m')

#Interfaz inicio
def menu():
    printA('Sistema gesti√≥n de Biblioteca üìö')
    printA('-------------------------------------------')
    print("""1) Agregar Libro.
2) Mostrar Libros.
3) Buscar Libro por t√≠tulo.
4) Actualizar informaci√≥n del libro.
5) Guardar libros en un archivo CSV.
6) Salir del programa.""")
    printA('-------------------------------------------')    

#Validar fechas (que tenga formato de fecha)
def validarFecha(fecha):
    try:
        datetime.strptime(fecha, '%Y-%m-%d')
        return True
    except ValueError:
        return False

#Validar titulo del libro
def validarTitulo(titulo):
    for i in range(len(LIBROS)):
        if LIBROS[i][0]==titulo:
            return i 
    return -1

#Registramos Libro
def agregarLibro():
    #INGRESAMOS TITULO DEL LIBRO
    titulo = input('Ingrese el t√≠tulo del libro: ').strip().upper()
    if not titulo:
        printR('El t√≠tulo no puede estar vac√≠o.')
        return
    #LLAMAMOS A LA VALIDACION DEL TITULO
    if validarTitulo(titulo) != -1:
        printR('T√≠tulo repetido.')
        return 
       
    #INGRESAMOS AUTOR DEL LIBRO
    autor = input('Ingrese el autor del libro: ').strip().upper()
    if not autor:
        printR('Autor del libro no puede estar vac√≠o.')
        return

    #INGRESAMOS A√ëO DE PUBLICACI√ìN
    anio_public = input('Ingrese el a√±o de publicaci√≥n del libro (EJ: YYYY-MM-DD): ').strip()
    #LLAMAMOS A LA VALIDACION Y GUARDAMOS TIPO FECHA
    if not validarFecha(anio_public):
        printR('Fecha de publicaci√≥n no v√°lida.')
        return

    #INGRESAMOS GENERO DEL LIBRO
    genero_libro = input('Ingrese el g√©nero del libro: ').strip().capitalize()
    if not genero_libro:
        printR('El g√©nero del libro no puede estar vac√≠o.')
        return
    
    #Agregar libro a la colecci√≥n
    LIBROS.append([titulo, autor, anio_public, genero_libro])
    printV(f'El libro "{titulo}" ha sido agregado a la biblioteca.')  

#Mostrar los libros que hay en el sistema    
def mostrarLibros():
    if len(LIBROS) > 0:
        headers = ['T√≠tulo', 'Autor', 'A√±o de publicaci√≥n', 'G√©nero']
        print(tabulate(LIBROS, headers=headers, tablefmt='grid'))
    else:
        printR('No hay libros registrados.')
    
#Filtramos por titulo
def filtroTitulo():
    titulo = input('Ingrese el t√≠tulo del libro que desea buscar: ').strip().upper()
    if titulo:
        for libro in LIBROS:
            if libro[0].lower() == titulo.lower(): # Filtrar por T√≠tulo
                headers = ['T√≠tulo', 'Autor', 'A√±o de publicaci√≥n', 'G√©nero']
                print(tabulate([libro], headers=headers, tablefmt='grid'))
                return
        printR(f'No se encontr√≥ ning√∫n libro con el t√≠tulo "{titulo}".')
    else:
        printR('El t√≠tulo no puede estar vac√≠o.')

#MODIFICAR LIBROS
def modLibro():
    titulo = input('Ingrese t√≠tulo del libro a modificar: ').strip().upper()
    pos = validarTitulo(titulo)
    if pos>=0:
        libro = LIBROS[pos]
        nuevo_autor = input(f'Ingrese nuevo autor (actual: {libro[1]}): ').strip().upper()
        nuevo_anio_public = input(f'Ingrese nuevo a√±o de publicaci√≥n (actual: {libro[2]}): ').strip()
        if not validarFecha(nuevo_anio_public):
            printR('Fecha de publicaci√≥n no v√°lida')
            return  
        nuevo_genero_libro = input(f'Ingrese nuevo g√©nero del libro (actual: {libro[3]}): ').strip().capitalize()
        
        LIBROS[pos] = [titulo, nuevo_autor, nuevo_anio_public, nuevo_genero_libro]
        printV(f'El libro "{titulo}" actualizado con √©xito.')      
    else:
        printR('T√≠tulo no existe.')

def ImprimirHojaLibros():
    nombre_archivo = input("Ingrese el nombre del archivo CSV donde desea guardar la lista de libros: ")
    if len(LIBROS)>0:
        with open(f'{nombre_archivo}.csv', mode='w', newline='', encoding='utf-8') as archivo_csv:
            writer = csv.writer(archivo_csv, delimiter=',')
            LIBROS.insert(0,['T√≠tulo','Autor','A√±o de publicaci√≥n', 'G√©nero'])
            writer.writerows(LIBROS)
            LIBROS.pop(0)
        printV('Reporte Generado.')
    else:
        printR('No hay Libros registrados.')

def main():
    while True:
        limpiar()
        menu()
        opcion = input('Seleccione: ')

        if opcion == '6':
            printV('Saliendo del programa...')
            espera()
            break
        elif opcion == '1':
            printV('Registrar Libro')
            agregarLibro()
        elif opcion == '2':
            printV('Lista de Libros')
            mostrarLibros()
        elif opcion == '3':
            printV('Buscar libro por t√≠tulo')
            filtroTitulo()
        elif opcion == '4':
            printV('Actualizar informaci√≥n del libro')
            modLibro()
        elif opcion == '5':
            printA('Guardar libros en un archivo CSV')
            ImprimirHojaLibros()
        else:
            printR('Opci√≥n no v√°lida')